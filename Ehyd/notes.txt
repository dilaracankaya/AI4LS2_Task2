
gw
gw_temp 1
rain 3
snow 3
source_fr 1
conduct 1
source_temp 1
owf_level 3
owf_temp 1
owf_fr 3
sediment 1

########################################################################################################################
# Yer alt? su seviyesi – 3792 *
# Yer alt? s?cakl?k – 1562 *
# Messstellen – 3792
#
# Ya?mur – 863 *
# Kar – 631 *
# Messstellen – 907
#
# Fahig iletkenlik – 90 *
# Schüt debi – 93 *
# Temp – 93 *
# messstellen – 93
#
# w-tages nehir seviyesi – 759 (iki csv'de data yok ama o yüzden 757 gelmeli) *
# wt-monat temp – 322 *
# schweb sediment – 35 *
# q tages debi - 625 *
# messstellen - 792
########################################################################################################################


Sources:
- Quellleitfahigkeit -  sularda ölçülen elektriksel iletkenlik (konduktans) bilgilerini içermektedir. µS/cm
# Failed to create DataFrame: Quellleitfähigkeit-Tagesmittel-396796.csv, error: could not convert string to float: 'rekonstruiert aus Version 3->'

- Quellshüttung - su debisi (ak?? h?z?) ölçümlerini içermektedir
# Failed to create DataFrame: Quellschüttung-Tagesmittel-396093.csv, error: could not convert string to float: 'F'

- Temperature
# Failed to create DataFrame: Quellwassertemperatur-Tagesmittel-396010.csv, error: could not convert string to float: 'K'


Surface Water:
- W – nehir su seviyesi
# Failed to create DataFrame: W-Tagesmittel-204388.csv, error: time data 'Invalid' does not match format '%d.%m.%Y %H:%M'
# Failed to create DataFrame: W-Tagesmittel-211078.csv, error: time data 'Invalid' does not match format '%d.%m.%Y %H:%M'
# data yok, k?zlardan biri de indirdikleri dosyalar? bir kontrol etsin

- Wt – su s?cakl???


- Schweb – sediment (Ask?da (çözünmü?) kat? madde miktar?, nehirdeki su ak???yla ta??nan küçük parçac?klar?n
(kum, kil, organik maddeler vb.) miktar?n? gösterir. Bu ölçümler, nehrin ta??d??? sediment miktar?n? anlamak ve nehir ekosisteminin durumunu de?erlendirmek için önemlidir.)


- Q – debi


- Gesch (az olan) - Yatak yükü, ask?da kat? maddeden farkl? olarak daha büyük parçac?klar?n hareketini temsil eder. Nehirlerin dibinde ta??n?r, akarsu ittire ittire ta??n?r gibi.



##
"""
########################################################################################################################
# Normalization
########################################################################################################################
scaler = MinMaxScaler(feature_range=(0, 1))

# normalized_monthly_dfs_list = [pd.DataFrame(scaler.fit_transform(df), index=df.index, columns=df.columns) for month, df in monthly_dataframes.items()]

normalized_dataframes = {}
for month, df in monthly_dataframes.items():
    normalized_df = pd.DataFrame(scaler.fit_transform(df), index=df.index, columns=df.columns)
    normalized_dataframes[month] = normalized_df



for key, value in normalized_dataframes.items():
    print(value.tail())


# zero-padding kontrolü ve dataframe ay?klamas?
monthly_zero_ratio_dict = {}
value_count = (normalized_dataframes["1960_01"].shape[0] * normalized_dataframes["1960_01"].shape[1]) # 89608

for key, df in normalized_dataframes.items():
    zero_counts = (df == 0).sum().sum()
    zero_ratio = zero_counts / value_count
    monthly_zero_ratio_dict[key] = zero_ratio

keys = list(monthly_zero_ratio_dict.keys())
values = list(monthly_zero_ratio_dict.values())
last_value_above_threshold = next((val for val in reversed(values) if val > 0.5), None) # 0.501
key_of_last_value_above_threshold = keys[values.index(last_value_above_threshold)] # 1984_11

plt.figure(figsize=(10, 6))
plt.plot(keys, values)
plt.xlabel('Date (Year-Month)')
plt.ylabel('Zero Ratio')
plt.xticks(rotation=45)
plt.title('Zero Ratio over the Dataframes')
plt.tight_layout()
plt.show()

normalized_dict_85to21 = {k: v for k, v in normalized_dataframes.items() if k >= "1985_01"}
len(normalized_dict_85to21) # 444
normalized_dict_85to21["1985_01"].shape # (487, 184)

file_path = os.path.join("Ehyd", "pkl_files", 'normalized_dict_85to21.pkl')
save_to_pickle(normalized_dict_85to21, file_path)

# Dosyay? aç?n ve içeri?i yükleyin
with open(file_path, 'rb') as file:
    normalized_dict_85to21 = pickle.load(file)
"""



# Calling .pkl files back from the directory
pkl_files = [f for f in os.listdir("Ehyd", "pkl_files") if f.endswith('.pkl')]

for pkl_file in pkl_files:
    file_path = os.path.join("Ehyd", "pkl_files", pkl_file)
    with open(file_path, 'rb') as file:
        var_name = pkl_file[:-4]
        globals()[var_name] = pickle.load(file)